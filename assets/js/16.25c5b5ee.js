(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{64:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"javascript中常用的小技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript中常用的小技巧","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript中常用的小技巧")]),a("h3",{attrs:{id:"逻辑操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 逻辑操作符")]),a("p",[t._v("如果左右两边有一个操作数不是布尔值，则"),a("code",[t._v("&&")]),t._v("和"),a("code",[t._v("||")]),t._v("操作符就不一定返回布尔值，遵循以下规则：")]),a("blockquote",[a("p",[a("strong",[t._v("逻辑非（||）")]),t._v("\n看左边的值是真是假，如果是真，则返回左边值，如果是假，则返回右边值")])]),a("blockquote",[a("p",[a("strong",[t._v("逻辑与（&&）")]),t._v("\n看左边的值是真是假，如果是真，返回的是右边的值; 如果是假，则返回左边的值；")])]),a("p",[a("em",[t._v("⚠️ 注：只有 false 、0、NaN、null、undefined、空字符串为假, 其余都是真")])]),a("p",[t._v("根据以上规则，可以有以下一些例子：")]),a("ul",[a("li",[t._v("默认值")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'默认提示信息'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[t._v("如果message为非false 、0、NaN、null、undefined，则打印出message，否则打印出“默认提示信息”")]),a("ul",[a("li",[t._v("类似三元运算")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isTrue "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'yes'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'no'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[t._v("如果isTrue为true的话，则打印yes, 反之no")]),a("ul",[a("li",[t._v("类似if true")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("hasAuth")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[t._v("当hasAuth()返回true时则执行getData()")]),a("h3",{attrs:{id:"按位非运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按位非运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 按位非运算符")]),a("blockquote",[a("p",[t._v("按位非运算 NOT 由否定号（~）表示，它是 ECMAScript 中为数不多的与二进制算术有关的运算符之一。\n位运算 NOT 是三步的处理过程：\n把运算数转换成 32 位数字\n把二进制数转换成它的二进制反码（0->1, 1->0）\n把二进制数转换成浮点数")])]),a("p",[t._v("举例子🌰：")]),a("ul",[a("li",[t._v("判断数组中是否有某元素")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("//易读")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//简洁")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("~")]),t._v("arr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("ul",[a("li",[t._v("更高效的parseInt")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token operator"}},[t._v("~")]),t._v("value "),a("span",{attrs:{class:"token comment"}},[t._v("//更搞笑")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);